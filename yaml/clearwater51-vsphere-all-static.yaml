tosca_definitions_version: cloudify_dsl_1_3

########################################################

imports:
  - http://www.getcloudify.org/spec/cloudify/3.4/types.yaml
  - http://www.getcloudify.org/spec/vsphere-plugin/2.0/plugin.yaml
  - http://www.getcloudify.org/spec/diamond-plugin/1.3.3/plugin.yaml
  - types/monitoring.yaml
  - types/clearwater.yaml

########################################################

plugins:
    dns-plugin:
        executor: host_agent
        source: dns-plugin

########################################################
relationships:
    dns_client_uses_dns_server:
       derived_from: cloudify.relationships.connected_to
       source_interfaces:
          cloudify.interfaces.relationship_lifecycle:
             preconfigure: dns-plugin.dns_plugin.tasks.configure_resolv_conf


########################################################
node_types:

  clearwater.nodes.MonitoredServer:
    derived_from: cloudify.vsphere.nodes.Server
    properties:
      cloudify_agent:
        default:
          user: { get_input: agent_user }
      server:
        default:
          template: { get_input: template_name }
          cpus: { get_input: vm_cpu }
          memory: { get_input: vm_memory }
    interfaces:
      cloudify.interfaces.monitoring_agent:
        install:
          implementation: diamond.diamond_agent.tasks.install
          inputs:
            diamond_config:
              default:
                interval: 5
        start: diamond.diamond_agent.tasks.start
        stop: diamond.diamond_agent.tasks.stop
        uninstall: diamond.diamond_agent.tasks.uninstall

      cloudify.interfaces.monitoring:
          start:
            implementation: diamond.diamond_agent.tasks.add_collectors
            inputs:
              collectors_config:
                default:
                  CPUCollector: {}
                  MemoryCollector: {}
                  LoadAverageCollector: {}
                  DiskUsageCollector:
                    config:
                      devices: x?vd[a-z]+[0-9]*$
                  NetworkCollector: {}

    policy_node_type:
       derived_from: cloudify.nodes.SoftwareComponent
       properties:
          nodes_to_monitor:
             default: []
       interfaces:
          cloudify.interfaces.lifecycle:
             start:
                implementation: scripts/policy-start.sh
                executor: central_deployment_agent
             stop:
                implementation: scripts/policy-stop.sh
                executor: central_deployment_agent
########################################################

inputs:

########################################################
#  vSphere connection config
########################################################

    vsphere_username:
        default: "administrator@vsphere.local"
    
    vsphere_password:
        default: ""
    
    vsphere_host:
        default: ""
    
    vsphere_port:
        default: 443
    
    vsphere_datacenter:
        default: "Datacenter"
    
    vsphere_resource_pool_name:
        default: "Resources"
    
    vsphere_auto_placement:
        type: boolean
        default: false

########################################################
# VMs parameters
########################################################

    cloudify_agent:
        default:  'ubuntu'
        description: >
            User for connecting to application VMs

    template_name:
        default: "ubuntu-14.04.5-x86_64-tmpl"
        description: >
            Template to clone VMs from

    vm_cpu:
        default: 2
    
    vm_memory:
        default: 2048
        
########################################################
# Network parameters
########################################################        
    network:
        default: "VM Network"

    switch_distributed:
        type: boolean
        default: false

    ellis_ip:
        default: "10.10.111.101"

    bono_ip:
        default: "10.10.111.108" #

    sprout_ip:
        default: "10.10.111.109" #

    homer_ip:
        default: "10.10.111.104"

    homestead_ip:
        default: "10.10.111.105"

    ralf_ip:
        default: "10.10.111.106"

    dns_ip:
        default: "10.10.111.107"

    gateway_ip:
        default: "10.10.111.1"

    network_ip:
        default: "10.10.111.0/24"

    dns_servers:
        default: 
            - 8.8.8.8
            - 8.8.4.4
########################################################

dsl_definitions:
    connection_config: &connection_config
        username: { get_input: vsphere_username }
        password: { get_input: vsphere_password }
        host: { get_input: vsphere_host }
        port: { get_input: vsphere_port }
        datacenter_name: { get_input: vsphere_datacenter }
        resource_pool_name: { get_input: vsphere_resource_pool_name }
        auto_placement: { get_input: vsphere_auto_placement }

########################################################

node_templates:
    a_node:
        type: cloudify.nodes.Compute
        properties:
           install_agent: false

    policy_node:
        type: policy_node_type
        relationships:
           - target: bono-vm
             type: cloudify.relationships.depends_on
           - target: sprout-vm
             type: cloudify.relationships.depends_on
           - target: a_node
             type: cloudify.relationships.contained_in
        properties:
           nodes_to_monitor:
              - bono-vm
              - sprout-vm

    bono-vm:
        type: clearwater.nodes.MonitoredServer
        properties:
            networking:
                dns_servers: { get_inputs: dns_servers }
                connect_networks:
                    - name: { get_input: network }
                      switch_distributed: { get_input: switch_distributed }
                      management: True
                      external: True
                      use_dhcp: False                      
                      ip: { get_input: bono_ip }
                      gateway: { get_input: gateway_ip }
                      network: { get_input: network_ip }
            connection_config: *connection_config

        relationships:
           - target: homestead-vm
             type: cloudify.relationships.depends_on

    ellis-vm:
        type: clearwater.nodes.MonitoredServer
        properties:
            networking:
                dns_servers: { get_inputs: dns_servers }
                connect_networks:
                    - name: { get_input: network }
                      switch_distributed: { get_input: switch_distributed }
                      management: True
                      external: True
                      use_dhcp: False                      
                      ip: { get_input: ellis_ip }
                      gateway: { get_input: gateway_ip }
                      network: { get_input: network_ip }
            connection_config: *connection_config
        relationships:
            - target: bono-vm
              type: cloudify.relationships.depends_on

    sprout-vm:
        type: clearwater.nodes.MonitoredServer
        properties:
            networking:
                dns_servers: { get_inputs: dns_servers }
                connect_networks:
                    - name: { get_input: network }
                      switch_distributed: { get_input: switch_distributed }
                      management: True
                      external: True
                      use_dhcp: False                      
                      ip: { get_input: sprout_ip }
                      gateway: { get_input: gateway_ip }
                      network: { get_input: network_ip }
            connection_config: *connection_config
        relationships:
           - target: homer-vm
             type: cloudify.relationships.depends_on
           - target: homestead-vm
             type: cloudify.relationships.depends_on

    homer-vm:
        type: clearwater.nodes.MonitoredServer
        properties:
            networking:
                dns_servers: { get_inputs: dns_servers }
                connect_networks:
                    - name: { get_input: network }
                      switch_distributed: { get_input: switch_distributed }
                      management: True
                      external: True
                      use_dhcp: False                      
                      ip: { get_input: homer_ip }
                      gateway: { get_input: gateway_ip }
                      network: { get_input: network_ip }
            connection_config: *connection_config

    homestead-vm:
        type: clearwater.nodes.MonitoredServer
        properties:
            networking:
                dns_servers: { get_inputs: dns_servers }
                connect_networks:
                    - name: { get_input: network }
                      switch_distributed: { get_input: switch_distributed }
                      management: True
                      external: True
                      use_dhcp: False                      
                      ip: { get_input: homestead_ip }
                      gateway: { get_input: gateway_ip }
                      network: { get_input: network_ip }
            connection_config: *connection_config

    ralf-vm:
        type: clearwater.nodes.MonitoredServer
        properties:
            networking:
                dns_servers: { get_inputs: dns_servers }
                connect_networks:
                    - name: { get_input: network }
                      switch_distributed: { get_input: switch_distributed }
                      management: True
                      external: True
                      use_dhcp: False                      
                      ip: { get_input: ralf_ip }
                      gateway: { get_input: gateway_ip }
                      network: { get_input: network_ip }
            connection_config: *connection_config

    dns-vm:
        type: clearwater.nodes.MonitoredServer
        relationships:
            - target: bono-vm
              type: cloudify.relationships.depends_on
            - target: ellis-vm
              type: cloudify.relationships.depends_on
            - target: sprout-vm
              type: cloudify.relationships.depends_on
            - target: homer-vm
              type: cloudify.relationships.depends_on
            - target: homestead-vm
              type: cloudify.relationships.depends_on
            - target: ralf-vm
              type: cloudify.relationships.depends_on

        properties:
            networking:
                dns_servers: { get_inputs: dns_servers }
                connect_networks:
                    - name: { get_input: network }
                      switch_distributed: { get_input: switch_distributed }
                      management: True
                      external: True
                      use_dhcp: False                      
                      ip: { get_input: dns_ip }
                      gateway: { get_input: gateway_ip }
                      network: { get_input: network_ip }
            connection_config: *connection_config

########################################################
    bono_app:
        type: cloudify.nodes.SoftwareComponent
        interfaces:
           cloudify.interfaces.lifecycle:
              create:
                 implementation: scripts/bono.sh
                 inputs:
                    public_ip: { get_attribute: [ bono-vm, public_ip ] }
                    dns_ip: { get_attribute: [ dns-vm, ip ]  }
        relationships:
            -  type: cloudify.relationships.contained_in
               target: bono-vm
            -  type: dns_client_uses_dns_server
               target: dns_app

    ellis_app:
        type: cloudify.nodes.SoftwareComponent
        interfaces:
           cloudify.interfaces.lifecycle:
              create:
                 implementation: scripts/ellis.sh
                 inputs:
                    public_ip: { get_attribute: [ellis-vm, public_ip] }
                    dns_ip: { get_attribute: [dns-vm, ip] }
        relationships:
            -  type: cloudify.relationships.contained_in
               target: ellis-vm
            -  type: dns_client_uses_dns_server
               target: dns_app

    ralf_app:
        type: cloudify.nodes.SoftwareComponent
        interfaces:
           cloudify.interfaces.lifecycle:
              create:
                 implementation: scripts/ralf.sh
                 inputs:
                    dns_ip: { get_attribute: [ dns-vm, ip ] }
        relationships:
            -  type: cloudify.relationships.contained_in
               target: ralf-vm
            -  type: dns_client_uses_dns_server
               target: dns_app

    homestead_app:
        type: cloudify.nodes.SoftwareComponent
        interfaces:
           cloudify.interfaces.lifecycle:
              create:
                 implementation: scripts/homestead.sh
                 inputs:
                    dns_ip: { get_attribute: [dns-vm, ip] }
        relationships:
            -  type: cloudify.relationships.contained_in
               target: homestead-vm
            -  type: dns_client_uses_dns_server
               target: dns_app

    homer_app:
        type: cloudify.nodes.SoftwareComponent
        interfaces:
           cloudify.interfaces.lifecycle:
              create:
                 implementation: scripts/homer.sh
                 inputs:
                    dns_ip: { get_attribute: [dns-vm, ip] }
        relationships:
            -  type: cloudify.relationships.contained_in
               target: homer-vm
            -  type: dns_client_uses_dns_server
               target: dns_app

    sprout_app:
        type: cloudify.nodes.SoftwareComponent
        interfaces:
           cloudify.interfaces.lifecycle:
              create:
                 implementation: scripts/sprout.sh
                 inputs:
                    dns_ip: { get_attribute: [dns-vm, ip] }
        relationships:
            -  type: cloudify.relationships.contained_in
               target: sprout-vm
            -  type: dns_client_uses_dns_server
               target: dns_app

    dns_app:
        type: cloudify.nodes.SoftwareComponent
        interfaces:
           cloudify.interfaces.lifecycle:
              create:
                 implementation: scripts/dns.sh
                 inputs:
                    dns_ip: { get_attribute: [dns-vm, ip] }
        relationships:
            -  type: cloudify.relationships.contained_in
               target: dns-vm

  proxy_node:
    type: SNMPManagerProxy
    relationships:
      - type: monitors_bono_nodes
        target: bono_app
      - type: monitors_sprout_nodes
        target: sprout_app

########################################################

    dns_app_config:
        type: cloudify.nodes.SoftwareComponent
        interfaces:
           cloudify.interfaces.lifecycle:
              create:
                 implementation: scripts/dns-config.sh
                 inputs:
                    process:
                       command_prefix: /usr/bin/sudo
        relationships:
                -  type: cloudify.relationships.contained_in
                   target: dns-vm
                -  type: cloudify.relationships.connected_to
                   target: dns_app
#                -  type: cloudify.relationships.connected_to
#                   target: bono_app
#                -  type: cloudify.relationships.connected_to
#                   target: ellis_app
#                -  type: cloudify.relationships.connected_to
#                   target: ralf_app
#                -  type: cloudify.relationships.connected_to
#                   target: sprout_app
#                -  type: cloudify.relationships.connected_to
#                   target: homer_app
#                -  type: cloudify.relationships.connected_to
#                   target: homestead_app

outputs:
  web:
    description: Web application endpoint
    value:
      ip_ellis: { get_attribute: [ ellis-vm, public_ip ] }
      ip_bono: { get_attribute: [ bono-vm, public_ip ] }
      signup_code: secret
